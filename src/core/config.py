"""
Configuration file for API keys and settings.
"""

import os

# Telegram bot token
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')

# Ollama API configuration
# Ollama runs locally and doesn't require API keys
OLLAMA_BASE_URL = os.getenv('OLLAMA_BASE_URL', 'http://localhost:11434')
OLLAMA_MODEL = os.getenv('OLLAMA_MODEL', 'llama3.2:1b')

def get_ollama_config():
    """Get Ollama configuration."""
    return {
        'base_url': OLLAMA_BASE_URL,
        'model': OLLAMA_MODEL
    }

def is_ollama_available():
    """Check if Ollama is available."""
    try:
        import requests
        response = requests.get(f"{OLLAMA_BASE_URL}/api/tags", timeout=5)
        return response.status_code == 200
    except Exception:
        return False

def get_telegram_token():
    """Get Telegram bot token from environment variables."""
    token = os.getenv('TELEGRAM_BOT_TOKEN')
    if not token:
        raise ValueError("TELEGRAM_BOT_TOKEN environment variable is required")
    return token

def validate_api_keys():
    """Validate Ollama availability and provide recommendations."""
    issues = []
    recommendations = []
    
    # Check Telegram token
    telegram_token = os.getenv('TELEGRAM_BOT_TOKEN')
    if not telegram_token:
        issues.append("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    elif len(telegram_token) < 40:
        issues.append("‚ö†Ô∏è TELEGRAM_BOT_TOKEN –≤—ã–≥–ª—è–¥–∏—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (—Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π)")
    
    # Check Ollama availability
    ollama_available = is_ollama_available()
    if not ollama_available:
        issues.append("‚ö†Ô∏è Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (AI –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞)")
        issues.append("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ Ollama –∫–æ–º–∞–Ω–¥–æ–π: ollama serve")
    
    # Ollama recommendations
    recommendations.extend([
        "ü§ñ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Ollama:",
        "‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Ollama: https://ollama.ai/download",
        "‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: ollama serve",
        "‚Ä¢ –°–∫–∞—á–∞–π—Ç–µ –º–æ–¥–µ–ª—å: ollama pull llama3.2",
        "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: curl http://localhost:11434/api/tags",
        "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ OLLAMA_BASE_URL –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç",
        "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ OLLAMA_MODEL –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥—Ä—É–≥–æ–π –º–æ–¥–µ–ª–∏",
        "‚Ä¢ Ollama —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç API –∫–ª—é—á–µ–π",
        "‚Ä¢ –ú–æ–¥–µ–ª–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –∏ —Ä–∞–±–æ—Ç–∞—é—Ç –æ—Ñ–ª–∞–π–Ω"
    ])
    
    return {
        'issues': issues,
        'recommendations': recommendations,
        'telegram_configured': bool(telegram_token),
        'ollama_available': ollama_available
    }

def get_security_report():
    """Get detailed configuration report for Ollama setup."""
    validation = validate_api_keys()
    
    report = ["üîç –û—Ç—á–µ—Ç –ø–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã:\n"]
    
    # Status
    if validation['telegram_configured']:
        report.append("‚úÖ Telegram Bot Token: –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    else:
        report.append("‚ùå Telegram Bot Token: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        
    if validation['ollama_available']:
        report.append("‚úÖ Ollama: –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    else:
        report.append("‚ö†Ô∏è Ollama: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—Ç—Ä–µ–±—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫)")
    
    # Issues
    if validation['issues']:
        report.append("\nüö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")
        report.extend(validation['issues'])
    
    # Recommendations
    report.append("\n" + "\n".join(validation['recommendations']))
    
    # Determine security status
    is_secure = validation['telegram_configured'] and len(validation['issues']) == 0
    
    return {
        'status': 'secure' if is_secure else 'warning',
        'issues': validation['issues'],
        'report': "\n".join(report),
        'telegram_configured': validation['telegram_configured'],
        'ollama_available': validation['ollama_available']
    }